{"version":3,"sources":["src/scripts/weather.js"],"names":["weather","document","getElementById","API_KEY","COORDS","getWeather","lat","lon","fetch","then","response","json","temperature","main","temp","place","name","innerText","saveCoords","coordsObj","localStorage","setItem","JSON","stringify","handleGeoSuccess","position","latitude","coords","longitude","handleGeoError","console","log","getCoords","navigator","geolocation","getCurrentPosition","loadState","savedCoords","getItem","parsedCoords","parse","init"],"mappings":";AAAA,IAAMA,EAAUC,SAASC,eAAe,cAClCC,EAAU,mCACVC,EAAS,SAEf,SAASC,EAAWC,EAAKC,GACvBC,MACyDF,uDAAAA,OAAAA,EAAWC,SAAAA,OAAAA,EAAaJ,WAAAA,OAAAA,EADjF,kBAGGM,KAAK,SAAUC,GACPA,OAAAA,EAASC,SAEjBF,KAAK,SAAUE,GACRC,IAAAA,EAAcD,EAAKE,KAAKC,KACxBC,EAAQJ,EAAKK,KAEnBhB,EAAQiB,UAAeL,GAAAA,OAAAA,EAAkBG,QAAAA,OAAAA,KAI/C,SAASG,EAAWC,GAClBC,aAAaC,QAAQjB,EAAQkB,KAAKC,UAAUJ,IAG9C,SAASK,EAAiBC,GAClBC,IAAAA,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAMlCV,EALkB,CAChBQ,SAAAA,EACAE,UAAAA,IAIFvB,EAAWqB,EAAUE,GAGvB,SAASC,IACPC,QAAQC,IAAI,8BAGd,SAASC,IACPC,UAAUC,YAAYC,mBAAmBX,EAAkBK,GAG7D,SAASO,IACDC,IAAAA,EAAcjB,aAAakB,QAAQlC,GACrCiC,GAAgB,OAAhBA,EACFL,QACK,CACCO,IAAAA,EAAejB,KAAKkB,MAAMH,GAChChC,EAAWkC,EAAab,SAAUa,EAAaX,YAInD,SAASa,IACPL,IAGFK","file":"weather.e2c55f4a.js","sourceRoot":"..","sourcesContent":["const weather = document.getElementById('js-weather');\nconst API_KEY = '0cfac8ddc4cf4f32c83925b3cd30f994';\nconst COORDS = 'COORDS';\n\nfunction getWeather(lat, lon) {\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`\n  )\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (json) {\n      const temperature = json.main.temp;\n      const place = json.name;\n\n      weather.innerText = `${temperature}Â°C @${place}`;\n    });\n}\n\nfunction saveCoords(coordsObj) {\n  localStorage.setItem(COORDS, JSON.stringify(coordsObj));\n}\n\nfunction handleGeoSuccess(position) {\n  const latitude = position.coords.latitude;\n  const longitude = position.coords.longitude;\n  const coordsObj = {\n    latitude,\n    longitude,\n  };\n\n  saveCoords(coordsObj);\n  getWeather(latitude, longitude);\n}\n\nfunction handleGeoError() {\n  console.log(\"Can't access geo location.\");\n}\n\nfunction getCoords() {\n  navigator.geolocation.getCurrentPosition(handleGeoSuccess, handleGeoError);\n}\n\nfunction loadState() {\n  const savedCoords = localStorage.getItem(COORDS);\n  if (savedCoords === null) {\n    getCoords();\n  } else {\n    const parsedCoords = JSON.parse(savedCoords);\n    getWeather(parsedCoords.latitude, parsedCoords.longitude);\n  }\n}\n\nfunction init() {\n  loadState();\n}\n\ninit();\n"]}